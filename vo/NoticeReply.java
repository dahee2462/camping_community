package vo;

import java.io.Serializable;
import java.util.Date;

/**
 * 공지사항 댓글 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
public class NoticeReply implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 댓글 번호. */
	private Integer norno;

	/** 댓글 내용. */
	private String norcontent;

	/** 댓글 작성일. */
	private Date nordate;

	/** 회원정보. */
	private Member member;

	/** 공지사항 게시글. */
	private Notice notice;

	/**
	 * 생성자.
	 */
	public NoticeReply() {
	}

	/**
	 * 댓글 번호을 설정합니다..
	 * 
	 * @param norno
	 *            댓글 번호
	 */
	public void setNorno(Integer norno) {
		this.norno = norno;
	}

	/**
	 * 댓글 번호을 가져옵니다..
	 * 
	 * @return 댓글 번호
	 */
	public Integer getNorno() {
		return this.norno;
	}

	/**
	 * 댓글 내용을 설정합니다..
	 * 
	 * @param norcontent
	 *            댓글 내용
	 */
	public void setNorcontent(String norcontent) {
		this.norcontent = norcontent;
	}

	/**
	 * 댓글 내용을 가져옵니다..
	 * 
	 * @return 댓글 내용
	 */
	public String getNorcontent() {
		return this.norcontent;
	}

	/**
	 * 댓글 작성일을 설정합니다..
	 * 
	 * @param nordate
	 *            댓글 작성일
	 */
	public void setNordate(Date nordate) {
		this.nordate = nordate;
	}

	/**
	 * 댓글 작성일을 가져옵니다..
	 * 
	 * @return 댓글 작성일
	 */
	public Date getNordate() {
		return this.nordate;
	}

	/**
	 * 회원정보을 설정합니다..
	 * 
	 * @param member
	 *            회원정보
	 */
	public void setMember(Member member) {
		this.member = member;
	}

	/**
	 * 회원정보을 가져옵니다..
	 * 
	 * @return 회원정보
	 */
	public Member getMember() {
		return this.member;
	}

	/**
	 * 공지사항 게시글을 설정합니다..
	 * 
	 * @param notice
	 *            공지사항 게시글
	 */
	public void setNotice(Notice notice) {
		this.notice = notice;
	}

	/**
	 * 공지사항 게시글을 가져옵니다..
	 * 
	 * @return 공지사항 게시글
	 */
	public Notice getNotice() {
		return this.notice;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((norno == null) ? 0 : norno.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		NoticeReply other = (NoticeReply) obj;
		if (norno == null) {
			if (other.norno != null) {
				return false;
			}
		} else if (!norno.equals(other.norno)) {
			return false;
		}
		return true;
	}

}
